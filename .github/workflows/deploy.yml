name: Deploy Utility Docker to Cloud Run Jobs

on:
  push:
    branches: [ main ]
    paths:
      - 'docker-utility/**'
      - '.github/workflows/deploy.yml'
  workflow_dispatch:
    inputs:
      job_name:
        description: 'Cloud Run Job name'
        required: true
        default: 'utility-image'
      command:
        description: 'Container command to run (e.g., net-all, net-info, net-check, net-egress, net-path, sh)'
        required: false
        default: 'net-all'
      args:
        description: 'Command arguments - use quotes for complex commands (e.g., "-c \"curl -I https://google.com && echo Done\"")'
        required: false
        default: ''
      target_host:
        description: 'Target host for network tests'
        required: false
        default: 'google.com'
      target_dest:
        description: 'Target destination for path/firewall checks'
        required: false
        default: 'storage.googleapis.com'

env:
  # Defaults (overridden dynamically from secrets.GCP_SA_KEY)
  GCP_PROJECT_ID: gifted-palace-468618-q5
  GCP_SA_EMAIL: github-actions@gifted-palace-468618-q5.iam.gserviceaccount.com
  GCR_IMAGE: gcr.io/gifted-palace-468618-q5/utility-image
  REGION: us-central1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Derive project settings from SA key
      run: |
        PROJECT_ID=$(echo '${{ secrets.GCP_SA_KEY }}' | jq -r .project_id)
        SA_EMAIL=$(echo '${{ secrets.GCP_SA_KEY }}' | jq -r .client_email)
        echo "GCP_PROJECT_ID=$PROJECT_ID" >> "$GITHUB_ENV"
        echo "GCP_SA_EMAIL=$SA_EMAIL" >> "$GITHUB_ENV"
        echo "GCR_IMAGE=gcr.io/$PROJECT_ID/utility-image" >> "$GITHUB_ENV"

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}

    - name: Configure gcloud and Docker
      run: |
        gcloud config set project "$GCP_PROJECT_ID"
        gcloud auth configure-docker --quiet

    - name: Build Docker image
      run: |
        cd docker-utility
        docker build -t ${{ env.GCR_IMAGE }}:${{ github.sha }} .
        docker tag ${{ env.GCR_IMAGE }}:${{ github.sha }} ${{ env.GCR_IMAGE }}:latest

    - name: Push Docker image to GCR
      run: |
        docker push ${{ env.GCR_IMAGE }}:${{ github.sha }}
        docker push ${{ env.GCR_IMAGE }}:latest

    - name: Deploy to Cloud Run Jobs
      run: |
        ARGS_INPUT='${{ github.event.inputs.args }}'
        ARGS_FLAG=()
        if [[ -n "$ARGS_INPUT" ]]; then
          ARGS_FLAG+=(--args)
          ARGS_FLAG+=("$ARGS_INPUT")
        fi

        JOB_NAME='${{ github.event.inputs.job_name || 'utility-image' }}'

        if gcloud run jobs describe "$JOB_NAME" --region "${{ env.REGION }}" >/dev/null 2>&1; then
          echo "Updating existing job $JOB_NAME..."
          gcloud run jobs update "$JOB_NAME" \
            --image "${{ env.GCR_IMAGE }}:${{ github.sha }}" \
            --region "${{ env.REGION }}" \
            --set-env-vars "TARGET_HOST=${{ github.event.inputs.target_host || 'google.com' }},TARGET_DEST=${{ github.event.inputs.target_dest || 'storage.googleapis.com' }}" \
            --command "${{ github.event.inputs.command || 'sh' }}" \
            "${ARGS_FLAG[@]}" \
            --cpu 1 \
            --memory 512Mi \
            --max-retries 0 \
            --service-account "${{ env.GCP_SA_EMAIL }}"
        else
          echo "Creating new job $JOB_NAME..."
          gcloud run jobs create "$JOB_NAME" \
            --image "${{ env.GCR_IMAGE }}:${{ github.sha }}" \
            --region "${{ env.REGION }}" \
            --set-env-vars "TARGET_HOST=${{ github.event.inputs.target_host || 'google.com' }},TARGET_DEST=${{ github.event.inputs.target_dest || 'storage.googleapis.com' }}" \
            --command "${{ github.event.inputs.command || 'sh' }}" \
            "${ARGS_FLAG[@]}" \
            --cpu 1 \
            --memory 512Mi \
            --max-retries 0 \
            --service-account "${{ env.GCP_SA_EMAIL }}"
        fi

    - name: Execute Cloud Run Job (optional)
      if: github.event_name == 'workflow_dispatch'
      run: |
        gcloud run jobs execute "${{ github.event.inputs.job_name || 'utility-image' }}" \
          --region "${{ env.REGION }}" \
          --wait

    - name: Get job execution logs
      if: github.event_name == 'workflow_dispatch'
      run: |
        EXECUTION_ID=$(gcloud run jobs executions list \
          --region "${{ env.REGION }}" \
          --filter="job=${{ github.event.inputs.job_name || 'utility-image' }}" \
          --limit=1 \
          --format="value(name)")
        if [ ! -z "$EXECUTION_ID" ]; then
          gcloud run jobs executions logs read "$EXECUTION_ID" \
            --region "${{ env.REGION }}"
        fi
